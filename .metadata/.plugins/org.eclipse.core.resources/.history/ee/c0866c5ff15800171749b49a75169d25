package com.niit.controllers;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import com.niit.model.Customer;
import com.niit.service.CustomerService;

@Controller
public class CustomerController {
	@Autowired
private CustomerService customerService;
@RequestMapping("/all/registrationform")
public String getRegistrationForm(Model model){
	model.addAttribute("customer",new Customer());
	return "registrationpage";
}
@RequestMapping("/all/register")
public String registerCustomer(@Valid @ModelAttribute(name="customer") Customer customer,BindingResult result,Model model){
	if(result.hasErrors())
		return "registrationpage"; 
	List<Customer> customers= customerService.getCustomers();
	String username=customer.getUsers().getUsername();
	String email=customer.getEmail();
	for(Customer c:customers){
		
	   if(c.getUsers().getUsername().equals(username))
	   {
		   model.addAttribute("duplicateUsername","Username already exists");
		   return "registrationpage";
	   }
	}
	for(Customer c:customers){
		   if(c.getEmail().equals(email))
		   {
			   model.addAttribute("duplicateEmail","EmailId already exists");
			   return "registrationpage";
		   }
		}
	customerService.saveCustomer(customer);
	
	return "login";
}

@RequestMapping("/memberShip.obj")
public String getCart1(Model model1) {

	Authentication auth1 = SecurityContextHolder.getContext().getAuthentication();
	String name1 = auth1.getName(); // get logged in username
	System.out.println("Name" + name1);
	Customer id2 = customerService.getCustomerByName(name1);

	List<CartItem> cartItem1 = cartItemService.getAllCartItemById(id2);
	double d = 0;
	for (CartItem f : cartItem1) {
		System.out.println("ProductPrice:" + f.getTotalprice());

		d = d + f.getTotalprice();
		System.out.println("GrandTotal:" + d);

	}

	System.out.println("CartSize:" + cartItem1.size());

	model1.addAttribute("grandtotal", d);
	model1.addAttribute("cartItems1", cartItem1);
	return "checkout";
}
}
